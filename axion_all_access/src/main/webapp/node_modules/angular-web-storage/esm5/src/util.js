/**
 * 判断是否在浏览器中渲染Angular应用
 * `decorator` 无法直接使用Angular `PLATFORM_ID` 标识
 * 这带来的好处是当服务端自行填充 Document 时也能很好的识别
 */
export var isBrowser = typeof document === 'object' && !!document;
var StorageUtil = /** @class */ (function () {
    function StorageUtil() {
    }
    StorageUtil.get = function (storage, key) {
        if (storage == null) {
            return null;
        }
        var value = StorageUtil.parse(storage.getItem(key) || 'null') || null;
        if (value === null)
            return null;
        if (typeof value === 'object' &&
            typeof value._expired !== 'undefined' &&
            value._expired !== 0 &&
            +new Date() > value._expired) {
            StorageUtil.remove(storage, key);
            return null;
        }
        return value._value || null;
    };
    StorageUtil.set = function (storage, key, value, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 't'; }
        if (storage == null) {
            return;
        }
        storage.setItem(key, StorageUtil.stringify({
            _expired: StorageUtil.getExpired(expiredAt, expiredUnit),
            _value: value,
        }));
    };
    StorageUtil.remove = function (storage, key) {
        if (storage == null) {
            return;
        }
        storage.removeItem(key);
    };
    StorageUtil.key = function (storage, index) {
        return storage == null ? '' : storage.key(index);
    };
    StorageUtil.getExpired = function (val, unit) {
        if (val <= 0)
            return 0;
        var now = +new Date();
        switch (unit) {
            case 's': // 秒
                return now + 1000 * val;
            case 'm': // 分
                return now + 1000 * 60 * val;
            case 'h': // 时
                return now + 1000 * 60 * 60 * val;
            case 'd': // 天
                return now + 1000 * 60 * 60 * 24 * val;
            case 'w': // 周
                return now + 1000 * 60 * 60 * 24 * 7 * val;
            case 'y': // 年
                return now + 1000 * 60 * 60 * 24 * 365 * val;
            case 't': // 自定义
                return now + val;
        }
        return 0;
    };
    StorageUtil.stringify = function (value) {
        return JSON.stringify(value);
    };
    StorageUtil.parse = function (text) {
        try {
            return JSON.parse(text) || null;
        }
        catch (e) {
            return text;
        }
    };
    return StorageUtil;
}());
export { StorageUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItd2ViLXN0b3JhZ2UvIiwic291cmNlcyI6WyJzcmMvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFZQTs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLElBQU0sU0FBUyxHQUFHLE9BQU8sUUFBUSxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDO0FBRXBFO0lBQUE7SUFtRkEsQ0FBQztJQWxGUSxlQUFHLEdBQVYsVUFBVyxPQUFnQixFQUFFLEdBQVc7UUFDdEMsSUFBSSxPQUFPLElBQUksSUFBSSxFQUFFO1lBQ25CLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFNLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDO1FBQ3hFLElBQUksS0FBSyxLQUFLLElBQUk7WUFBRSxPQUFPLElBQUksQ0FBQztRQUNoQyxJQUNFLE9BQU8sS0FBSyxLQUFLLFFBQVE7WUFDekIsT0FBTyxLQUFLLENBQUMsUUFBUSxLQUFLLFdBQVc7WUFDckMsS0FBSyxDQUFDLFFBQVEsS0FBSyxDQUFDO1lBQ3BCLENBQUMsSUFBSSxJQUFJLEVBQUUsR0FBRyxLQUFLLENBQUMsUUFBUSxFQUM1QjtZQUNBLFdBQVcsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLEtBQUssQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFTSxlQUFHLEdBQVYsVUFDRSxPQUFnQixFQUNoQixHQUFXLEVBQ1gsS0FBVSxFQUNWLFNBQXFCLEVBQ3JCLFdBQThCO1FBRDlCLDBCQUFBLEVBQUEsYUFBcUI7UUFDckIsNEJBQUEsRUFBQSxpQkFBOEI7UUFFOUIsSUFBSSxPQUFPLElBQUksSUFBSSxFQUFFO1lBQ25CLE9BQVE7U0FDVDtRQUNELE9BQU8sQ0FBQyxPQUFPLENBQ2IsR0FBRyxFQUNILFdBQVcsQ0FBQyxTQUFTLENBQUM7WUFDcEIsUUFBUSxFQUFFLFdBQVcsQ0FBQyxVQUFVLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQztZQUN4RCxNQUFNLEVBQUUsS0FBSztTQUNkLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVNLGtCQUFNLEdBQWIsVUFBYyxPQUFnQixFQUFFLEdBQVc7UUFDekMsSUFBSSxPQUFPLElBQUksSUFBSSxFQUFFO1lBQ25CLE9BQVE7U0FDVDtRQUNELE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUVNLGVBQUcsR0FBVixVQUFXLE9BQWdCLEVBQUUsS0FBYTtRQUN4QyxPQUFPLE9BQU8sSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRWMsc0JBQVUsR0FBekIsVUFBMEIsR0FBVyxFQUFFLElBQWlCO1FBQ3RELElBQUksR0FBRyxJQUFJLENBQUM7WUFBRSxPQUFPLENBQUMsQ0FBQztRQUN2QixJQUFNLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7UUFDeEIsUUFBUSxJQUFJLEVBQUU7WUFDWixLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7WUFDMUIsS0FBSyxHQUFHLEVBQUUsSUFBSTtnQkFDWixPQUFPLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUMvQixLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUNwQyxLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUM7WUFDekMsS0FBSyxHQUFHLEVBQUUsSUFBSTtnQkFDWixPQUFPLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztZQUM3QyxLQUFLLEdBQUcsRUFBRSxJQUFJO2dCQUNaLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDO1lBQy9DLEtBQUssR0FBRyxFQUFFLE1BQU07Z0JBQ2QsT0FBTyxHQUFHLEdBQUcsR0FBRyxDQUFDO1NBQ3BCO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRWMscUJBQVMsR0FBeEIsVUFBeUIsS0FBVTtRQUNqQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVjLGlCQUFLLEdBQXBCLFVBQXFCLElBQVk7UUFDL0IsSUFBSTtZQUNGLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUM7U0FDakM7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sSUFBSSxDQUFDO1NBQ2I7SUFDSCxDQUFDO0lBQ0gsa0JBQUM7QUFBRCxDQUFDLEFBbkZELElBbUZDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHBpcmF0aW9uIHRpbWUgdW5pdFxuICogczogc2Vjb25kc1xuwqAqIG06IG1pbnV0ZVxuwqAqIGg6IGhvdXJcbsKgKiBkOiBkYXlcbsKgKiB3OiB3ZWVrXG7CoCogeTogeWVhclxuwqAqIHQ6IEN1c3RvbSAobWlsbGlzZWNvbmQpXG4gKi9cbmV4cG9ydCB0eXBlIEV4cGlyZWRVbml0ID0gJ3MnIHwgJ20nIHwgJ2gnIHwgJ2QnIHwgJ3cnIHwgJ3knIHwgJ3QnO1xuXG4vKipcbiAqIOWIpOaWreaYr+WQpuWcqOa1j+iniOWZqOS4rea4suafk0FuZ3VsYXLlupTnlKhcbiAqIGBkZWNvcmF0b3JgIOaXoOazleebtOaOpeS9v+eUqEFuZ3VsYXIgYFBMQVRGT1JNX0lEYCDmoIfor4ZcbiAqIOi/meW4puadpeeahOWlveWkhOaYr+W9k+acjeWKoeerr+iHquihjOWhq+WFhSBEb2N1bWVudCDml7bkuZ/og73lvojlpb3nmoTor4bliKtcbiAqL1xuZXhwb3J0IGNvbnN0IGlzQnJvd3NlciA9IHR5cGVvZiBkb2N1bWVudCA9PT0gJ29iamVjdCcgJiYgISFkb2N1bWVudDtcblxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VVdGlsIHtcbiAgc3RhdGljIGdldChzdG9yYWdlOiBTdG9yYWdlLCBrZXk6IHN0cmluZyk6IGFueSB7XG4gICAgaWYgKHN0b3JhZ2UgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gU3RvcmFnZVV0aWwucGFyc2Uoc3RvcmFnZS5nZXRJdGVtKGtleSkgfHwgJ251bGwnKSB8fCBudWxsO1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgaWYgKFxuICAgICAgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuICAgICAgdHlwZW9mIHZhbHVlLl9leHBpcmVkICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgdmFsdWUuX2V4cGlyZWQgIT09IDAgJiZcbiAgICAgICtuZXcgRGF0ZSgpID4gdmFsdWUuX2V4cGlyZWRcbiAgICApIHtcbiAgICAgIFN0b3JhZ2VVdGlsLnJlbW92ZShzdG9yYWdlLCBrZXkpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlLl92YWx1ZSB8fCBudWxsO1xuICB9XG5cbiAgc3RhdGljIHNldChcbiAgICBzdG9yYWdlOiBTdG9yYWdlLFxuICAgIGtleTogc3RyaW5nLFxuICAgIHZhbHVlOiBhbnksXG4gICAgZXhwaXJlZEF0OiBudW1iZXIgPSAwLFxuICAgIGV4cGlyZWRVbml0OiBFeHBpcmVkVW5pdCA9ICd0JyxcbiAgKTogdm9pZCB7XG4gICAgaWYgKHN0b3JhZ2UgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIDtcbiAgICB9XG4gICAgc3RvcmFnZS5zZXRJdGVtKFxuICAgICAga2V5LFxuICAgICAgU3RvcmFnZVV0aWwuc3RyaW5naWZ5KHtcbiAgICAgICAgX2V4cGlyZWQ6IFN0b3JhZ2VVdGlsLmdldEV4cGlyZWQoZXhwaXJlZEF0LCBleHBpcmVkVW5pdCksXG4gICAgICAgIF92YWx1ZTogdmFsdWUsXG4gICAgICB9KSxcbiAgICApO1xuICB9XG5cbiAgc3RhdGljIHJlbW92ZShzdG9yYWdlOiBTdG9yYWdlLCBrZXk6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmIChzdG9yYWdlID09IG51bGwpIHtcbiAgICAgIHJldHVybiA7XG4gICAgfVxuICAgIHN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICB9XG5cbiAgc3RhdGljIGtleShzdG9yYWdlOiBTdG9yYWdlLCBpbmRleDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICByZXR1cm4gc3RvcmFnZSA9PSBudWxsID8gJycgOiBzdG9yYWdlLmtleShpbmRleCk7XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBnZXRFeHBpcmVkKHZhbDogbnVtYmVyLCB1bml0OiBFeHBpcmVkVW5pdCk6IG51bWJlciB7XG4gICAgaWYgKHZhbCA8PSAwKSByZXR1cm4gMDtcbiAgICBjb25zdCBub3cgPSArbmV3IERhdGUoKTtcbiAgICBzd2l0Y2ggKHVuaXQpIHtcbiAgICAgIGNhc2UgJ3MnOiAvLyDnp5JcbiAgICAgICAgcmV0dXJuIG5vdyArIDEwMDAgKiB2YWw7XG4gICAgICBjYXNlICdtJzogLy8g5YiGXG4gICAgICAgIHJldHVybiBub3cgKyAxMDAwICogNjAgKiB2YWw7XG4gICAgICBjYXNlICdoJzogLy8g5pe2XG4gICAgICAgIHJldHVybiBub3cgKyAxMDAwICogNjAgKiA2MCAqIHZhbDtcbiAgICAgIGNhc2UgJ2QnOiAvLyDlpKlcbiAgICAgICAgcmV0dXJuIG5vdyArIDEwMDAgKiA2MCAqIDYwICogMjQgKiB2YWw7XG4gICAgICBjYXNlICd3JzogLy8g5ZGoXG4gICAgICAgIHJldHVybiBub3cgKyAxMDAwICogNjAgKiA2MCAqIDI0ICogNyAqIHZhbDtcbiAgICAgIGNhc2UgJ3knOiAvLyDlubRcbiAgICAgICAgcmV0dXJuIG5vdyArIDEwMDAgKiA2MCAqIDYwICogMjQgKiAzNjUgKiB2YWw7XG4gICAgICBjYXNlICd0JzogLy8g6Ieq5a6a5LmJXG4gICAgICAgIHJldHVybiBub3cgKyB2YWw7XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgc3RyaW5naWZ5KHZhbHVlOiBhbnkpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgcGFyc2UodGV4dDogc3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKHRleHQpIHx8IG51bGw7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfVxuICB9XG59XG4iXX0=