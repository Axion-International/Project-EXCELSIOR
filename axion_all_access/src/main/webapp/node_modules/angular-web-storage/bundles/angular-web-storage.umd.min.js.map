{"version":3,"sources":["ng://angular-web-storage/src/util.ts","ng://angular-web-storage/src/decorator.ts","ng://angular-web-storage/src/service.ts","ng://angular-web-storage/src/module.ts"],"names":["isBrowser","document","StorageUtil","get","storage","key","value","parse","getItem","_expired","Date","remove","_value","set","expiredAt","expiredUnit","setItem","stringify","getExpired","removeItem","index","val","unit","now","JSON","text","e","cache","WebStorage","target","propertyName","Object","defineProperty","enumerable","configurable","StorageService","this","prototype","_this","next","ls","test","push","forEach","v","clear","LocalStorageService","_super","call","localStorage","__extends","__decorate","Injectable","providedIn","SessionStorageService","sessionStorage","AngularWebStorageModule","__decorate$1","NgModule"],"mappings":"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","sourcesContent":["/**\n * Expiration time unit\n * s: seconds\nÂ * m: minute\nÂ * h: hour\nÂ * d: day\nÂ * w: week\nÂ * y: year\nÂ * t: Custom (millisecond)\n */\nexport type ExpiredUnit = 's' | 'm' | 'h' | 'd' | 'w' | 'y' | 't';\n\n/**\n * å¤æ­æ¯å¦å¨æµè§å¨ä¸­æ¸²æAngularåºç¨\n * `decorator` æ æ³ç´æ¥ä½¿ç¨Angular `PLATFORM_ID` æ è¯\n * è¿å¸¦æ¥çå¥½å¤æ¯å½æå¡ç«¯èªè¡å¡«å Document æ¶ä¹è½å¾å¥½çè¯å«\n */\nexport const isBrowser = typeof document === 'object' && !!document;\n\nexport class StorageUtil {\n  static get(storage: Storage, key: string): any {\n    if (storage == null) {\n      return null;\n    }\n    const value = StorageUtil.parse(storage.getItem(key) || 'null') || null;\n    if (value === null) return null;\n    if (\n      typeof value === 'object' &&\n      typeof value._expired !== 'undefined' &&\n      value._expired !== 0 &&\n      +new Date() > value._expired\n    ) {\n      StorageUtil.remove(storage, key);\n      return null;\n    }\n\n    return value._value || null;\n  }\n\n  static set(\n    storage: Storage,\n    key: string,\n    value: any,\n    expiredAt: number = 0,\n    expiredUnit: ExpiredUnit = 't',\n  ): void {\n    if (storage == null) {\n      return ;\n    }\n    storage.setItem(\n      key,\n      StorageUtil.stringify({\n        _expired: StorageUtil.getExpired(expiredAt, expiredUnit),\n        _value: value,\n      }),\n    );\n  }\n\n  static remove(storage: Storage, key: string): void {\n    if (storage == null) {\n      return ;\n    }\n    storage.removeItem(key);\n  }\n\n  static key(storage: Storage, index: number): string {\n    return storage == null ? '' : storage.key(index);\n  }\n\n  private static getExpired(val: number, unit: ExpiredUnit): number {\n    if (val <= 0) return 0;\n    const now = +new Date();\n    switch (unit) {\n      case 's': // ç§\n        return now + 1000 * val;\n      case 'm': // å\n        return now + 1000 * 60 * val;\n      case 'h': // æ¶\n        return now + 1000 * 60 * 60 * val;\n      case 'd': // å¤©\n        return now + 1000 * 60 * 60 * 24 * val;\n      case 'w': // å¨\n        return now + 1000 * 60 * 60 * 24 * 7 * val;\n      case 'y': // å¹´\n        return now + 1000 * 60 * 60 * 24 * 365 * val;\n      case 't': // èªå®ä¹\n        return now + val;\n    }\n    return 0;\n  }\n\n  private static stringify(value: any) {\n    return JSON.stringify(value);\n  }\n\n  private static parse(text: string) {\n    try {\n      return JSON.parse(text) || null;\n    } catch (e) {\n      return text;\n    }\n  }\n}\n","import { ExpiredUnit, StorageUtil, isBrowser } from './util';\n\ninterface ICache {\n  [key: string]: boolean;\n}\nconst cache: ICache = {};\n\nfunction WebStorage(\n  storage: Storage,\n  key: string,\n  expiredAt: number = 0,\n  expiredUnit: ExpiredUnit = 'd',\n) {\n  return (target: Object, propertyName: string): void => {\n    key = key || propertyName;\n    Object.defineProperty(target, propertyName, {\n      get: () => {\n        return StorageUtil.get(storage, <string>key);\n      },\n      set: (value: any) => {\n        if (!cache[<string>key]) {\n          const storedValue = StorageUtil.get(storage, <string>key);\n          if (storedValue === null) {\n            StorageUtil.set(\n              storage,\n              <string>key,\n              value,\n              expiredAt,\n              expiredUnit,\n            );\n          }\n          cache[<string>key] = true;\n          return;\n        }\n        StorageUtil.set(storage, <string>key, value, expiredAt, expiredUnit);\n      },\n      enumerable: true,\n      configurable: true,\n    });\n  };\n}\n\n/**\n * `localStorage` Decorator\n *\n * @param [expiredAt=0] Expiration time, 0 means forever\n * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])\n */\nexport function LocalStorage(\n  key?: string,\n  expiredAt: number = 0,\n  expiredUnit: ExpiredUnit = 't',\n) {\n  return WebStorage(isBrowser ? localStorage : null, key, expiredAt, expiredUnit);\n}\n\n/**\n * `sessionStorage` Decorator\n *\n * @param [expiredAt=0] Expiration time, 0 means forever\n * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])\n */\nexport function SessionStorage(\n  key?: string,\n  expiredAt: number = 0,\n  expiredUnit: ExpiredUnit = 't',\n) {\n  return WebStorage(isBrowser ? sessionStorage : null, key, expiredAt, expiredUnit);\n}\n","import { Injectable } from '@angular/core';\nimport { StorageUtil, ExpiredUnit, isBrowser } from './util';\n\nexport class StorageService {\n  constructor(private storage: Storage) {}\n\n  get(key: string) {\n    return StorageUtil.get(this.storage, key);\n  }\n\n  set(\n    key: string,\n    value: any,\n    expiredAt: number = 0,\n    expiredUnit: ExpiredUnit = 'd',\n  ) {\n    return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);\n  }\n\n  /**\n   * å é¤æå®keyï¼å¦ï¼\n   * - `remove('key')` å é¤ `key` é®\n   * - `remove(/BMap_\\w+/)` æ¹éå é¤ææ BMap_ å¼å¤´çé®\n   * @param key é®åææ­£åè¡¨è¾¾å¼\n   */\n  remove(key: string | RegExp) {\n    if (typeof key === 'string') {\n      StorageUtil.remove(this.storage, key);\n      return;\n    }\n    let index = 0;\n    let next = StorageUtil.key(this.storage, index);\n    const ls: string[] = [];\n    while (next) {\n      if (key.test(next)) ls.push(next);\n      next = StorageUtil.key(this.storage, ++index);\n    }\n    ls.forEach(v => StorageUtil.remove(this.storage, v));\n  }\n\n  clear() {\n    this.storage.clear();\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class LocalStorageService extends StorageService {\n  constructor() {\n    super(isBrowser ? localStorage : null);\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SessionStorageService extends StorageService {\n  constructor() {\n    super(isBrowser ? sessionStorage : null);\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport class AngularWebStorageModule {}\n"]}