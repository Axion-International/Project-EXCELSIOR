var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable } from '@angular/core';
import { StorageUtil, isBrowser } from './util';
import * as i0 from "@angular/core";
export class StorageService {
    constructor(storage) {
        this.storage = storage;
    }
    get(key) {
        return StorageUtil.get(this.storage, key);
    }
    set(key, value, expiredAt = 0, expiredUnit = 'd') {
        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
    }
    /**
     * 删除指定key，如：
     * - `remove('key')` 删除 `key` 键
     * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
     * @param key 键名或正则表达式
     */
    remove(key) {
        if (typeof key === 'string') {
            StorageUtil.remove(this.storage, key);
            return;
        }
        let index = 0;
        let next = StorageUtil.key(this.storage, index);
        const ls = [];
        while (next) {
            if (key.test(next))
                ls.push(next);
            next = StorageUtil.key(this.storage, ++index);
        }
        ls.forEach(v => StorageUtil.remove(this.storage, v));
    }
    clear() {
        this.storage.clear();
    }
}
let LocalStorageService = class LocalStorageService extends StorageService {
    constructor() {
        super(isBrowser ? localStorage : null);
    }
};
LocalStorageService.ngInjectableDef = i0.defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
LocalStorageService = __decorate([
    Injectable({ providedIn: 'root' }),
    __metadata("design:paramtypes", [])
], LocalStorageService);
export { LocalStorageService };
let SessionStorageService = class SessionStorageService extends StorageService {
    constructor() {
        super(isBrowser ? sessionStorage : null);
    }
};
SessionStorageService.ngInjectableDef = i0.defineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
SessionStorageService = __decorate([
    Injectable({ providedIn: 'root' }),
    __metadata("design:paramtypes", [])
], SessionStorageService);
export { SessionStorageService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItd2ViLXN0b3JhZ2UvIiwic291cmNlcyI6WyJzcmMvc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxXQUFXLEVBQWUsU0FBUyxFQUFFLE1BQU0sUUFBUSxDQUFDOztBQUU3RCxNQUFNLE9BQU8sY0FBYztJQUN6QixZQUFvQixPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO0lBQUcsQ0FBQztJQUV4QyxHQUFHLENBQUMsR0FBVztRQUNiLE9BQU8sV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxHQUFHLENBQ0QsR0FBVyxFQUNYLEtBQVUsRUFDVixZQUFvQixDQUFDLEVBQ3JCLGNBQTJCLEdBQUc7UUFFOUIsT0FBTyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLEdBQW9CO1FBQ3pCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztZQUN0QyxPQUFPO1NBQ1I7UUFDRCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLElBQUksR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEQsTUFBTSxFQUFFLEdBQWEsRUFBRSxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxFQUFFO1lBQ1gsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2xDLElBQUksR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUMvQztRQUNELEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdkIsQ0FBQztDQUNGO0FBR0QsSUFBYSxtQkFBbUIsR0FBaEMsTUFBYSxtQkFBb0IsU0FBUSxjQUFjO0lBQ3JEO1FBQ0UsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDO0NBQ0YsQ0FBQTs7QUFKWSxtQkFBbUI7SUFEL0IsVUFBVSxDQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDOztHQUN0QixtQkFBbUIsQ0FJL0I7U0FKWSxtQkFBbUI7QUFPaEMsSUFBYSxxQkFBcUIsR0FBbEMsTUFBYSxxQkFBc0IsU0FBUSxjQUFjO0lBQ3ZEO1FBQ0UsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQyxDQUFDO0NBQ0YsQ0FBQTs7QUFKWSxxQkFBcUI7SUFEakMsVUFBVSxDQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDOztHQUN0QixxQkFBcUIsQ0FJakM7U0FKWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdG9yYWdlVXRpbCwgRXhwaXJlZFVuaXQsIGlzQnJvd3NlciB9IGZyb20gJy4vdXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBTdG9yYWdlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RvcmFnZTogU3RvcmFnZSkge31cblxuICBnZXQoa2V5OiBzdHJpbmcpIHtcbiAgICByZXR1cm4gU3RvcmFnZVV0aWwuZ2V0KHRoaXMuc3RvcmFnZSwga2V5KTtcbiAgfVxuXG4gIHNldChcbiAgICBrZXk6IHN0cmluZyxcbiAgICB2YWx1ZTogYW55LFxuICAgIGV4cGlyZWRBdDogbnVtYmVyID0gMCxcbiAgICBleHBpcmVkVW5pdDogRXhwaXJlZFVuaXQgPSAnZCcsXG4gICkge1xuICAgIHJldHVybiBTdG9yYWdlVXRpbC5zZXQodGhpcy5zdG9yYWdlLCBrZXksIHZhbHVlLCBleHBpcmVkQXQsIGV4cGlyZWRVbml0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDliKDpmaTmjIflrpprZXnvvIzlpoLvvJpcbiAgICogLSBgcmVtb3ZlKCdrZXknKWAg5Yig6ZmkIGBrZXlgIOmUrlxuICAgKiAtIGByZW1vdmUoL0JNYXBfXFx3Ky8pYCDmibnph4/liKDpmaTmiYDmnIkgQk1hcF8g5byA5aS055qE6ZSuXG4gICAqIEBwYXJhbSBrZXkg6ZSu5ZCN5oiW5q2j5YiZ6KGo6L6+5byPXG4gICAqL1xuICByZW1vdmUoa2V5OiBzdHJpbmcgfCBSZWdFeHApIHtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIFN0b3JhZ2VVdGlsLnJlbW92ZSh0aGlzLnN0b3JhZ2UsIGtleSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxldCBpbmRleCA9IDA7XG4gICAgbGV0IG5leHQgPSBTdG9yYWdlVXRpbC5rZXkodGhpcy5zdG9yYWdlLCBpbmRleCk7XG4gICAgY29uc3QgbHM6IHN0cmluZ1tdID0gW107XG4gICAgd2hpbGUgKG5leHQpIHtcbiAgICAgIGlmIChrZXkudGVzdChuZXh0KSkgbHMucHVzaChuZXh0KTtcbiAgICAgIG5leHQgPSBTdG9yYWdlVXRpbC5rZXkodGhpcy5zdG9yYWdlLCArK2luZGV4KTtcbiAgICB9XG4gICAgbHMuZm9yRWFjaCh2ID0+IFN0b3JhZ2VVdGlsLnJlbW92ZSh0aGlzLnN0b3JhZ2UsIHYpKTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuc3RvcmFnZS5jbGVhcigpO1xuICB9XG59XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgTG9jYWxTdG9yYWdlU2VydmljZSBleHRlbmRzIFN0b3JhZ2VTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoaXNCcm93c2VyID8gbG9jYWxTdG9yYWdlIDogbnVsbCk7XG4gIH1cbn1cblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgZXh0ZW5kcyBTdG9yYWdlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKGlzQnJvd3NlciA/IHNlc3Npb25TdG9yYWdlIDogbnVsbCk7XG4gIH1cbn1cbiJdfQ==